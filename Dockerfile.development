FROM golang:1.17-alpine as builder
LABEL maintainer="CÃ©sar Reyes <cesar95rt@gmail.com>"
WORKDIR /build

ENV GOOS=linux
ENV GOARCH=amd64
ENV CGO_ENABLED=0
ENV GO111MODULE=on

RUN apk add git
RUN apk --no-cache add tzdata zlib-dev ttf-ubuntu-font-family ttf-linux-libertine freetype freetype-dev fontconfig libx11-dev libxext-dev libxrender-dev ttf-freefont dbus xvfb curl qt5-qtbase

RUN apk update && apk upgrade && \
  apk add --no-cache bash git openssh
RUN apk add -U --no-cache ca-certificates
RUN apk update && apk upgrade && apk add --update --no-cache \
    libgcc libstdc++ libx11 glib libxrender libxext libintl \
    libcrypto1.0 libssl1.0 \
    ttf-dejavu ttf-droid ttf-freefont ttf-liberation ttf-ubuntu-font-family \
    nodejs imagemagick pdftk

COPY wkhtmltopdf /bin
RUN chmod +x /bin/wkhtmltopdf

RUN echo $'#!/usr/bin/env sh\n\
Xvfb :0 -screen 0 640x480x8 -ac +extension GLX +render -noreset & \n\
DISPLAY=:0.0 wkhtmltopdf $@ \n\
killall Xvfb\
' > /usr/bin/wkhtmltopdf-headless && \
    chmod +x /usr/bin/wkhtmltopdf-headless

RUN ln -s /usr/share/fonts /usr/lib/fonts
RUN apk --no-cache add msttcorefonts-installer fontconfig && \
    update-ms-fonts && \
    fc-cache -f

COPY ./parqueoasis-backend .

RUN go build -mod vendor -a -installsuffix cgo -ldflags="-w -s" -o /go/bin/backend

FROM ubuntu
COPY --from=builder /go/bin/backend /backend
COPY --from=builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/
COPY --from=builder /usr/local/go/lib/time/zoneinfo.zip /
COPY --from=builder /build/templates /templates
ENV ZONEINFO=/zoneinfo.zip

CMD ["/backend", "backend-up"]